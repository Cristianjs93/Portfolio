---
import { navItems } from '@/data/constants';
import ThemeToggle from './ThemeToggle.astro';
import LanguageSelector from './LanguageSelector.astro';
import Hamburger from './icons/Hamburger.astro';
---

<header class='fixed top-0 left-0 w-full mt-2 z-30'>
  <div
    class='flex justify-between sm:justify-center items-center sm:gap-6 lg:gap-12 w-11/12 mx-auto py-2 px-4 sm:max-w-xl lg:max-w-[695px] rounded-full nav-container'
  >
    <nav class='flex'>
      <label class='cursor-pointer z-50 sm:hidden' for='hamburger-menu'>
        <Hamburger class='size-7' />
      </label>
      <input
        id='hamburger-menu'
        class='peer hidden hamburger-menu'
        type='checkbox'
      />
      <ul
        class='fixed sm:static top-[-8px] left-0 w-screen h-0 peer-checked:h-screen sm:w-auto sm:h-auto overflow-hidden flex flex-col sm:flex-row justify-center items-center gap-6 lg:gap-12 bg-white/95 dark:bg-gray-900/95 sm:bg-transparent sm:dark:bg-transparent transition-all z-40'
      >
        {
          navItems.map((link) => (
            <li class='inline-flex items-center gap-2 w-36 sm:w-auto text-xl sm:text-sm lg:text-md font-medium text-gray-600 dark:text-gray-200'>
              <link.icon class='size-5 sm:hidden' />
              <a
                id={link.url}
                class='transition hover:text-blue-500'
                href={link.url}
                aria-label={link.label}
                data-i18n={`header.${link.label}`}
              />
            </li>
          ))
        }
      </ul>
    </nav>
    <div class='flex justify-center items-center sm:gap-6 lg:gap-12'>
      <LanguageSelector />
      <ThemeToggle />
    </div>
  </div>
</header>

<style>
  .nav-container {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  .nav-container {
    @apply dark:bg-gray-800/80 bg-white/50;
  }

  @keyframes nav-shadown {
    0% {
      @apply dark:bg-gray-800/0 bg-white/0;
    }
    to {
      @apply shadow-lg ring-1 backdrop-blur ring-white/10;
    }
  }
</style>

<script is:inline>
  const navItems = document.querySelectorAll('header nav a');
  const hamburgerMenu = document.getElementById('hamburger-menu');

  navItems.forEach((item) => {
    item.addEventListener('click', (event) => {
      event.preventDefault();
      const anchor = event.target;
      if (anchor.href.startsWith('mailto:')) {
        window.open(anchor.href, '_blank');
        closeMenu();
      } else {
        const url = anchor.id;
        redirect(url);
        closeMenu();
      }
      document.body.classList.remove('overflow-hidden');
    });
  });

  const redirect = (url) => {
    const targetId = url.substring(2);
    const targetElement = document.getElementById(targetId);
    targetElement.scrollIntoView({ behavior: 'smooth' });
  };

  const closeMenu = () => {
    hamburgerMenu.checked = false;
  };

  hamburgerMenu.addEventListener('change', () => {
    if (hamburgerMenu.checked) {
      document.body.classList.add('overflow-hidden');
    } else {
      document.body.classList.remove('overflow-hidden');
    }
  });

  document.addEventListener('astro:page-load', () => {
    const sections = document.querySelectorAll('section');

    const callback = (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute('aria-label') == entry.target.id) {
              item.classList.add('text-blue-500');
            } else {
              item.classList.remove('text-blue-500');
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: '0px',
      threshold: 0.25,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    document.onvisibilitychange = () => {
      if (document.visibilityState === 'hidden') {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>
